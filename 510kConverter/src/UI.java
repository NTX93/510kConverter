/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.*;
import java.awt.Frame;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import org.json.XML;
import org.json.JSONObject;
import org.json.CDL;
import org.json.JSONArray;
//import org.json.*;
//import org.json.simple.JSONArray;
//import org.json.simple.JSONObject;
import org.json.simple.parser.*;
import javax.swing.*;



/**
 *
 * @author NobleTalal
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    String path1;
    String path2;
    String filename;
    
    public UI() {
        initComponents();
        logbox.setEditable(false);
        pathField.setEditable(false);
        this.setTitle("Database File Converter");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        pathField = new javax.swing.JTextField();
        browse1 = new java.awt.Button();
        convert = new java.awt.Button();
        label2 = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        logbox = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        browse1.setActionCommand("browse1");
        browse1.setLabel("Browse");
        browse1.setName("Browse"); // NOI18N
        browse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse1ActionPerformed(evt);
            }
        });

        convert.setActionCommand("convert");
        convert.setLabel("Convert");
        convert.setName("Convert"); // NOI18N
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        label2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label2.setText("Choose the file you want to convert:");

        logbox.setColumns(20);
        logbox.setRows(5);
        jScrollPane2.setViewportView(logbox);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Log:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(pathField, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(browse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(153, 153, 153))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pathField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        browse1.getAccessibleContext().setAccessibleName("browse1");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        
        
        /*
         JSONObject json = new JSONObject("");
         JSONParser parser = new JSONParser();
        try {
            json = (JSONObject) parser.parse(new FileReader(path1));
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
        
     File jsonFile = new File(path1);
     //String jsonString = "{\"infile\": [{\"field1\": 11,\"field2\": 12,\"field3\": 13},{\"field1\": 21,\"field2\": 22,\"field3\": 23},{\"field1\": 31,\"field2\": 32,\"field3\": 33}]}";

    InputStreamReader reader = null;
   
        try {
            reader = new InputStreamReader(new FileInputStream(jsonFile), "UTF-8");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    BufferedReader jsonBuffer = new BufferedReader(reader);
    String line;
    StringBuilder json = new StringBuilder();
    //json.append("{\"infile\": ");
        try {
            while ((line = jsonBuffer.readLine()) != null)
            {
                json.append(line); 
            }   } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    
    
        
        JSONObject jsonObject;
        try{
            jsonObject = new JSONObject(json.toString());
        } catch(org.json.JSONException ex)
        {
            logbox.append("File not supported. Please choose another file. \n");
            return;
            
        }
   
        
    JSONArray jsonArray = jsonObject.getJSONArray("5kRace");
        
    System.out.println("json array before: " + jsonArray.toString());
        
        
    
    
        
     
        String csv = "";
        
        
        int id = 1;
        for (int i=0; i < jsonArray.length(); i++)
        {
            System.out.println("sah");
            System.out.println("i is: " + i);

            while (id < 3)
            {
                JSONObject a = (JSONObject)jsonArray.getJSONObject(i).getJSONObject("" + id);



                jsonArray.getJSONObject(i).put("ID:", a.get("ID"));
                
                

                jsonArray.getJSONObject(i).put("Name:", a.get("Name"));
                



                //jsonArray.getJSONObject(i).put("Name:", a.get("Name:"));


                jsonArray.getJSONObject(i).put("Time:", a.get("Time"));
                
                
                
                

                System.out.println("jsonArray at " + i + " is " + jsonArray.getJSONObject(i).toString());
                //jsonArray.getJSONObject(i).put("Time:", a.get("Time:"));

                //jsonArray.put(a);

               //System.out.println("HERE YO:  " + b.getJSONObject(i).getJSONArray("Name:").get(i));
               //b.getJSONObject(i).getJSONObject("" +a.get("Name")).put(""+a.get("Name"), a.get("Name"));
                //b.getJSONObject(i).put("Name", b.getJSONObject(i).getJSONArray("Name:").get(i) + " " + j);

                jsonArray.getJSONObject(i).remove(id + "");
                //csv += CDL.toString(jsonArray);
                //jsonArray.put(a);

                id++;
            }


        }
            
        
        
        
        //jsonArray = jsonArray.getJSONArray(WIDTH)
        
        System.out.println("json array after: " + jsonArray.toString());
        csv += CDL.toString(jsonArray);
        
        
       
        
     
        
        
        try {
            //Writer output = new BufferedWriter(new FileWriter(file)).write(xml);
            logbox.append("Converting the file... \n");
            FileWriter fw = new FileWriter(path1.replace(filename, "") + "\\ConvertedFile.csv");
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(csv);
            bw.flush();
            bw.close();
            System.out.println("Success!");
            logbox.append("File converted successfully! \n");
            logbox.append("Your new file is located in the same directory with the name ConvertedFile.csv \n");
        } catch (IOException ex) {
            logbox.append("File conversion faild. (Error: writing new file.");
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_convertActionPerformed

    private void browse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse1ActionPerformed
        
        FileDialog fd = new FileDialog (UI.this, "Choose a file", FileDialog.LOAD);
        String defDirectory = System.getProperty("user.home");
        fd.setDirectory(defDirectory + "/Desktop");
        fd.setVisible(true);
        filename = fd.getFile();
        
        System.out.println(filename);
        
        
        path1 = fd.getDirectory();
        path1 += filename;
        System.out.println(path1);
        if (filename == null)
        {
            System.out.println("Choice Cancelled.");   
            logbox.append("Choice cancelled. \n");
        }
        else
        {
            System.out.println("You chose: " + filename);
            logbox.append("You chose: " + filename + "\n");
            pathField.setText(path1);
        }
        
    }//GEN-LAST:event_browse1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button browse1;
    private java.awt.Button convert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.Label label2;
    private javax.swing.JTextArea logbox;
    private javax.swing.JTextField pathField;
    // End of variables declaration//GEN-END:variables

    




}
